@model AppModel.Models.ProductModel

@{
    ViewBag.Title = "Create";
}

<h2>Add-Product</h2>
<h3>@ViewBag.status</h3>

@using (Html.BeginForm("Create", "Home", FormMethod.Post,
                    new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.Category, new List<SelectListItem>
                    {
                        new SelectListItem() {Text = "T-Shirts", Value="T-Shirts"},
                        new SelectListItem() {Text = "Casual Shirts", Value="Casual Shirts"},
                        new SelectListItem() {Text = "Formal Shirts", Value="Formal Shirts"},
                        new SelectListItem() {Text = "Sweaters", Value="Sweaters"},
                        new SelectListItem() {Text = "Sweatshirts", Value="Sweatshirts"},
                        new SelectListItem() {Text = "Blazers & Coats", Value="Blazers & Coats"}
                    }, "Select", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.Quantity, new List<SelectListItem>
         {
             new SelectListItem() {Text = "5", Value="5"},
             new SelectListItem() {Text = "10", Value="10"},
             new SelectListItem() {Text = "20", Value="20"},
             new SelectListItem() {Text = "50", Value="50"},
             new SelectListItem() {Text = "100", Value="100"},

         }, "Select", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SDes, "Short Description", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.TextAreaFor(model => model.SDes, 2, 40, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SDes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LDes, "Long Description", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.TextAreaFor(model => model.LDes, 3, 40, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LDes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SImg, "Small Image", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            <input type="file" name="sfile" value="sfile" id="sfile" class="form-control " />
            @Html.ValidationMessageFor(model => model.SImg, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LImg, "Large Image", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">

            <input type="file" name="lfile" value="lfile" id="lfile" class="form-control" />
            @Html.ValidationMessageFor(model => model.LImg, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-4 col-md-8">
            <input type="submit" id="submit" value="Add Product" class="col-12 btn btn-success" />   @Html.ActionLink("Cancle","Index",null,new { @class = "btn btn-warning"})
        </div>
    </div>
</div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
